name: Build and Push Docker Image

on:
  push:
    tags:
      - '*'               # 推送任意 tag 时触发
  workflow_dispatch:       # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 0. 修改 hosts 文件（可选）
      - name: Modify hosts file
        run: |
          echo "${{ vars.DOCKER_HOST }} ${{ vars.DOCKER_REGISTRY }}" | sudo tee -a /etc/hosts

      # 1. 拉取仓库代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. 登录私有或公开 Docker Registry
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.DOCKER_REGISTRY }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3. 启用 QEMU 多架构支持
      - name: Set up QEMU
        run: |
          docker run --rm --privileged tonistiigi/binfmt --install all

      # 4. 设置 Buildx 构建环境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5. 获取 Git tag 作为镜像版本号
      - name: Extract tag version
        id: vars
        run: echo "IMAGE_VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
      
      # 6 写入到文件
      - name: Write version to file
        run: |
          echo "${{ env.IMAGE_VERSION }}" > Version

      # 7. 构建并推送镜像
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-cn
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          driver-opts: |
            network=host
          tags: |
            ${{ vars.DOCKER_REGISTRY || 'docker.io' }}/${{ vars.DOCKER_USERNAME }}/iptv:latest
            ${{ vars.DOCKER_REGISTRY || 'docker.io' }}/${{ vars.DOCKER_USERNAME }}/iptv:${{ env.IMAGE_VERSION }}
